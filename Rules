#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.


#
## Pre-Process
#

preprocess do
  for tag in all_tags
    @items << Nanoc::Item.new("", {:title => tag.capitalize, :tag => tag, :layout => "tag", :extension => 'html'}, "/blog/tags/#{tag.to_url}/")
  end
end



#
## COMPILATION
#

passthrough '/webfonts/*'
passthrough '/assets/*'

compile '/images/*/' do
end

compile '/stylesheet/' do
end

compile '/javascript/*'  do
end


## hack:
##       Bootstrap.less already processed and routed
##       But don't want to use the other less files :)



compile '*' do
  if item.binary?
    # don’t filter binary items
  elsif item[:layout] == 'html'
    filter :erb
    layout 'default'
  else
    filter :erb
    filter :kramdown
    layout item[:layout] || 'markdown'
  end
end

#
## ROUTES
#

route '/images/*/' do
  item.identifier.chop + '.' + item[:extension]
end

route '/stylesheet/' do
  '/style.css'
end

route '/javascript/*' do
  item.identifier.chop + '.' + item[:extension]
end

# NOT using the pre-processor (tags/timeline)
route (%r!/blog/([0-9]+)!) do
  if %r!([0-9]+)/([0-9]+)/(.*)!.match(item.identifier)
    y    = $1
    m    = $2
    slug = $3

    "/blog/#{y}/#{m}/#{slug}index.html"
  end
end

route '/blog/tags/*' do
  item.identifier + 'index.html'
end

route '*' do
  if item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension]
  else
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier + 'index.html'
  end
end


#
## LAYOUT
#

layout '*', :erb
